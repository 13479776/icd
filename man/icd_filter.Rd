% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deprecated.R, R/filter.R
\name{icd9FilterValid}
\alias{icd9FilterInvalid}
\alias{icd9FilterPoa}
\alias{icd9FilterPoaNo}
\alias{icd9FilterPoaNotNo}
\alias{icd9FilterPoaNotYes}
\alias{icd9FilterPoaYes}
\alias{icd9FilterValid}
\alias{icd_filter}
\alias{icd_filter_poa}
\alias{icd_filter_poa_no}
\alias{icd_filter_poa_not_no}
\alias{icd_filter_poa_not_yes}
\alias{icd_filter_poa_yes}
\title{Filters data frame based on present-on-arrival flag}
\usage{
icd9FilterValid(icd9df, icd9Field = NULL, isShort = NULL, invert = FALSE)

icd9FilterInvalid(icd9df, icd9Field = NULL, isShort = NULL,
  invert = FALSE)

icd9FilterPoa(icd9df, poaField = "poa", poa = icd9PoaChoices)

icd9FilterPoaYes(icd9df, poaField = "poa")

icd9FilterPoaNo(icd9df, poaField = "poa")

icd9FilterPoaNotNo(icd9df, poaField = "poa")

icd9FilterPoaNotYes(icd9df, poaField = "poa")

icd_filter_poa(x, poa_name = "poa", poa = icd9PoaChoices)

icd_filter_poa_yes(x, poa_name = "poa")

icd_filter_poa_no(x, poa_name = "poa")

icd_filter_poa_not_no(x, poa_name = "poa")

icd_filter_poa_not_yes(x, poa_name = "poa")
}
\arguments{
\item{icd9df}{Deprecated. Use \code{x}}

\item{icd9Field}{The column in the data frame which contains the ICD codes.
This is a character vector of length one. If it is \code{NULL}, \code{icd9}
will attempt to guess the column name, looking for progressively less
likely possibilities until it matche a single column. Failing this, it will
take the first column in the data frame. Specifying the column using this
argument avoids the guesswork.}

\item{isShort}{Deprecated. Single logical value which determines whether the ICD-9 code
provided is in short (TRUE) or decimal (FALSE) form. Where reasonable, this
is guessed from the input data.}

\item{invert}{Single logical value. Returns the inverse of the result. E.g.
if seeking valid ICD-9 codes, the invalid ones are returned.}

\item{poaField}{Deprecated. Use poa_name}

\item{poa}{single character value, being one of \code{poaChoices} whether to
account for co-morbidities flagged as present-on-arrival. This is not a
simple binary, since many codes are exempt, unspecified, or unknown.
\code{poaField} gives the choices: yes, not no, no, not yes. The
intermediate codes, such as "exempt", "unknown" and \code{NA} mean that
"yes" is not the same as "not no."}

\item{x}{data frame containing columns for visitId (which is the feault
name), icd9 (default for the icd9 code), and  maybe also a POA flag.}

\item{poa_name}{The name of column in the data frame which contains the
Present On Arrival flag. The flag itself is a single character, typically
one of "Y", "N", "E", "X", "U" or empty. The poaField is a character vector
of length one.}

\item{x}{input vector of ICD codes}
}
\description{
Present On Arrival (POA) is not a simple flag, since many codes
  are exempt, unspecified, or unknown. Therefore, two options are given: get
  all the comorbidities where the POA flag was definitely -ve, coded as "N"
  or definitely +ve and coded as "Y". Negating one set won't give the other
  set unless all codes were either Y or N.
}
\section{Functions}{
\itemize{
\item \code{icd_filter_poa_yes}: Select rows where Present-on-Arrival flag is
explicitly "Yes."

\item \code{icd_filter_poa_no}: Select rows where Present-on-Arrival flag is
explicitly "No."

\item \code{icd_filter_poa_not_no}: Select rows where Present-on-Arrival flag is
anything but "No." This includes unknown, exempt, other codes, and of
course all those marked "Yes."

\item \code{icd_filter_poa_not_yes}: Select rows where Present-on-Arrival flag is
anything byt "Yes." This would group exempt, unknown and other codes under
"Not POA" which is unlikely to be a good choice, since exempt codes, of
which there are a quite large number, tend to describe chronic or
out-of-hospital characteristics.
}}
\examples{
\dontrun{
# using magrittr is beautiful:
library("magrittr")
myData <- data.frame(
  visitId = c("v1", "v2", "v3", "v4"),
  diag = c("39891", "39790", "41791", "4401"),
  poa = c("Y", "N", NA, "Y"),
  stringsAsFactors = FALSE
)
myData \%>\% icd9FilterPoaNotNo() \%>\% icd9ComorbidAhrq
# can fill out named fields also:
myData \%>\% icd9FilterPoaYes(poa_name="poa") \%>\%
  icd9ComorbidAhrq(icd9Field = "diag", visitId = "visitId", isShort = TRUE)
# can call the core icd9Comorbid function with an arbitrary mapping
myData \%>\%
icd_filter_poa_yes \%>\%
icd_comorbid(icd_name = "diag", visit_name = "visitId",
  map = quanElixComorbid, short_mapping = TRUE)
}
}

