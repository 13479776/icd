// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// icd9MajMinToCode
CharacterVector icd9MajMinToCode(std::vector< std::string > mjr, std::vector< std::string > mnr, bool isShort);
RcppExport SEXP icd9_icd9MajMinToCode(SEXP mjrSEXP, SEXP mnrSEXP, SEXP isShortSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::vector< std::string > >::type mjr(mjrSEXP );
        Rcpp::traits::input_parameter< std::vector< std::string > >::type mnr(mnrSEXP );
        Rcpp::traits::input_parameter< bool >::type isShort(isShortSEXP );
        CharacterVector __result = icd9MajMinToCode(mjr, mnr, isShort);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// icd9MajMinToShort
CharacterVector icd9MajMinToShort(std::vector< std::string > mjr, std::vector< std::string > mnr);
RcppExport SEXP icd9_icd9MajMinToShort(SEXP mjrSEXP, SEXP mnrSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::vector< std::string > >::type mjr(mjrSEXP );
        Rcpp::traits::input_parameter< std::vector< std::string > >::type mnr(mnrSEXP );
        CharacterVector __result = icd9MajMinToShort(mjr, mnr);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// icd9MajMinToDecimal
CharacterVector icd9MajMinToDecimal(std::vector< std::string > mjr, std::vector< std::string > mnr);
RcppExport SEXP icd9_icd9MajMinToDecimal(SEXP mjrSEXP, SEXP mnrSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< std::vector< std::string > >::type mjr(mjrSEXP );
        Rcpp::traits::input_parameter< std::vector< std::string > >::type mnr(mnrSEXP );
        CharacterVector __result = icd9MajMinToDecimal(mjr, mnr);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// icd9PartsToShort
CharacterVector icd9PartsToShort(List parts);
RcppExport SEXP icd9_icd9PartsToShort(SEXP partsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< List >::type parts(partsSEXP );
        CharacterVector __result = icd9PartsToShort(parts);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// icd9PartsToDecimal
CharacterVector icd9PartsToDecimal(List parts);
RcppExport SEXP icd9_icd9PartsToDecimal(SEXP partsSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< List >::type parts(partsSEXP );
        CharacterVector __result = icd9PartsToDecimal(parts);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// icd9MajMinToParts
List icd9MajMinToParts(CharacterVector mjr, CharacterVector mnr);
RcppExport SEXP icd9_icd9MajMinToParts(SEXP mjrSEXP, SEXP mnrSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type mjr(mjrSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type mnr(mnrSEXP );
        List __result = icd9MajMinToParts(mjr, mnr);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// icd9MajMinToParts_list
List icd9MajMinToParts_list(CharacterVector mjr, CharacterVector mnr);
RcppExport SEXP icd9_icd9MajMinToParts_list(SEXP mjrSEXP, SEXP mnrSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type mjr(mjrSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type mnr(mnrSEXP );
        List __result = icd9MajMinToParts_list(mjr, mnr);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// icd9MajMinToParts_slower
List icd9MajMinToParts_slower(CharacterVector mjr, CharacterVector mnr);
RcppExport SEXP icd9_icd9MajMinToParts_slower(SEXP mjrSEXP, SEXP mnrSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type mjr(mjrSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type mnr(mnrSEXP );
        List __result = icd9MajMinToParts_slower(mjr, mnr);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// icd9ShortToParts_cpp_slow
List icd9ShortToParts_cpp_slow(CharacterVector icd9Short, String minorEmpty = "");
RcppExport SEXP icd9_icd9ShortToParts_cpp_slow(SEXP icd9ShortSEXP, SEXP minorEmptySEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type icd9Short(icd9ShortSEXP );
        Rcpp::traits::input_parameter< String >::type minorEmpty(minorEmptySEXP );
        List __result = icd9ShortToParts_cpp_slow(icd9Short, minorEmpty);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// icd9ShortToParts
List icd9ShortToParts(CharacterVector icd9Short, std::string minorEmpty = "");
RcppExport SEXP icd9_icd9ShortToParts(SEXP icd9ShortSEXP, SEXP minorEmptySEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type icd9Short(icd9ShortSEXP );
        Rcpp::traits::input_parameter< std::string >::type minorEmpty(minorEmptySEXP );
        List __result = icd9ShortToParts(icd9Short, minorEmpty);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// icd9ShortToParts_cpp_test
List icd9ShortToParts_cpp_test(CharacterVector icd9Short, std::string minorEmpty = "");
RcppExport SEXP icd9_icd9ShortToParts_cpp_test(SEXP icd9ShortSEXP, SEXP minorEmptySEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type icd9Short(icd9ShortSEXP );
        Rcpp::traits::input_parameter< std::string >::type minorEmpty(minorEmptySEXP );
        List __result = icd9ShortToParts_cpp_test(icd9Short, minorEmpty);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// icd9ShortToDecimal
CharacterVector icd9ShortToDecimal(CharacterVector x);
RcppExport SEXP icd9_icd9ShortToDecimal(SEXP xSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP );
        CharacterVector __result = icd9ShortToDecimal(x);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
